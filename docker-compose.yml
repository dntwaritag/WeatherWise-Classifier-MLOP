version: '3.8'

services:
  web:
    build: .
    env_file:
      - .env.docker
    volumes:
      - ./src:/app/src
      - model_data:/app/models
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - weathernet

  postgres:
    image: postgres:13-alpine
    env_file:
      - .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weathernet

  redis:
    image: redis:6-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - weathernet

  mlflow:
    image: mlflow/mlflow
    env_file:
      - .env.docker
    volumes:
      - mlflow_data:/mlruns
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - weathernet

volumes:
  postgres_data:
  redis_data:
  model_data:
  mlflow_data:

networks:
  weathernet:
    driver: bridge
